{"ast":null,"code":"var _jsxFileName = \"/workspace/jeopardy/src/Question.js\";\nimport React, { useState } from 'react';\nimport \"./Question.css\";\nexport default function Question(props) {\n  let [counter, setCounter] = useState(0);\n  let [message, setMessage] = useState(props.point);\n\n  function changeDisplay() {\n    let increase = counter + 1;\n    setCounter(increase);\n\n    if (increase === 3) {\n      setMessage(\"\");\n    } else if (increase === 2) {\n      setMessage(props.answer);\n    } else if (increase === 1) {\n      setMessage(props.question);\n    }\n  }\n\n  return React.createElement(\"div\", {\n    onClick: changeDisplay,\n    class: \"boxes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, message));\n}","map":{"version":3,"sources":["/workspace/jeopardy/src/Question.js"],"names":["React","useState","Question","props","counter","setCounter","message","setMessage","point","changeDisplay","increase","answer","question"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,gBAAP;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAEpC,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,CAAD,CAApC;AACA,MAAI,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAACE,KAAK,CAACK,KAAP,CAApC;;AAEA,WAASC,aAAT,GAAyB;AACrB,QAAIC,QAAQ,GAAGN,OAAO,GAAG,CAAzB;AACAC,IAAAA,UAAU,CAACK,QAAD,CAAV;;AACA,QAAGA,QAAQ,KAAK,CAAhB,EAAkB;AACdH,MAAAA,UAAU,CAAC,EAAD,CAAV;AACH,KAFD,MAEO,IAAIG,QAAQ,KAAK,CAAjB,EAAoB;AACvBH,MAAAA,UAAU,CAACJ,KAAK,CAACQ,MAAP,CAAV;AACH,KAFM,MAEA,IAAID,QAAQ,KAAK,CAAjB,EAAoB;AACvBH,MAAAA,UAAU,CAACJ,KAAK,CAACS,QAAP,CAAV;AACH;AACJ;;AAED,SACI;AAAK,IAAA,OAAO,EAAEH,aAAd;AAA6B,IAAA,KAAK,EAAC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,OAAJ,CADJ,CADJ;AAMD","sourcesContent":["import React, {useState} from 'react';\nimport \"./Question.css\";\nexport default function Question(props) {\n\n    let [counter, setCounter] = useState(0);\n    let [message, setMessage] = useState(props.point)\n\n    function changeDisplay() {\n        let increase = counter + 1;\n        setCounter(increase);\n        if(increase === 3){\n            setMessage(\"\");\n        } else if (increase === 2) {\n            setMessage(props.answer);\n        } else if (increase === 1) {\n            setMessage(props.question);\n        }\n    }\n\n    return (\n        <div onClick={changeDisplay} class=\"boxes\">\n            <p>{message}</p>\n        </div>\n    );\n\n  }"]},"metadata":{},"sourceType":"module"}